
模拟的场景：
Sunny软件公司欲推出一款新的手机游戏软件，该软件能够支持Symbian、Android和 Windows Mobile等多个智能手机操作系统平台，针对不同的手机操作系统，该游戏软件提 供了不同的游戏
操作控制(OperationController)类和游戏界面控制(InterfaceController)类， 并提供相应的工厂类来封装这些类的初始化过程。软件要求具有较好的扩展性以支持新 的操作系统平台，为了
满足上述需求，试采用抽象工厂模式对其进行设计。

抽象概念：
1.产品族：同一个 产品族中的产品可以是没有任何关系的对象，但是它们都具有一些共同的约束，如同一操作 系统下的按钮和文本框，按钮与文本框之间没有直接关系，但它们都是属于某一
          操作系统 的，此时具有一个共同的约束条件：操作系统的类型
2.产品等级结构：即产品的继承关系。具体到Java中就是类和接口的继承关系

核心思想：工厂接口不再只生产一种产品，而是负责同一产品等级结构的整个产品族的生产。抽象工厂模式是工厂方法模式的进一步延伸

优缺点：增加新的产品族(即接口不变，只增加一套新的实现类)很方便，但增加新的产品等级结构(即增加新的接口)较麻烦。